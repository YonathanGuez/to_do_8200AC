# apiVersion: v1
# kind: Secret
# metadata:
#   name: postgres-secret
# type: Opaque
# data:
#   postgres-user: postgres
#   postgres-password: postgres
# ---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-configmap
data:
  postgres-host: postgres-service:5432
  postgres-dbname: todo
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgresql-pv
  labels:
    type: local
spec:
  storageClassName: hostpath
  capacity:
    storage: 1Gi
  accessModes:
  - ReadWriteOnce
  hostPath:
    path: "/run/desktop/mnt/host/c/tmp/"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgresql-pvc
  labels:
    app: postgresql
    tier: database
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgresql-pv2
  labels:
    type: local
spec:
  storageClassName: hostpath
  capacity:
    storage: 50Mi
  accessModes:
  - ReadWriteOnce
  hostPath:
    path: "/run/desktop/mnt/host/c/Users/yaniv/Documents/project-yoni/to_do_8200AC/init/"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgresql-pvc2
  labels:
    app: postgresql
    tier: database
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:latest
        lifecycle:
          postStart:
            exec:
              command: ["/bin/sh", "-c", "sleep 44 && psql -U postgres todo -f /tmp/test-prod.sql"]
        ports:
        - containerPort: 80
        env:
        - name: POSTGRES_DB
          value: todo
        - name: POSTGRES_USER
          value: postgres
        - name: POSTGRES_PASSWORD
          value: postgres
        - name: POSTGRES_HOST
          valueFrom:
            configMapKeyRef:
              name: postgres-configmap
              key: postgres-host
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgresdata
        - mountPath: /tmp
          name: datasql
      volumes:
      - name: postgresdata
        persistentVolumeClaim:
          claimName: postgresql-pvc
      - name: datasql
        persistentVolumeClaim:
          claimName: postgresql-pvc2
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
spec:
  selector:
    app: postgres
  type: ClusterIP
  ports:
  - protocol: TCP
    port: 5432
    targetPort: 5432
